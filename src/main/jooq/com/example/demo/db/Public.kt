/*
 * This file is generated by jOOQ.
 */
package com.example.demo.db


import com.example.demo.db.sequences.SAGA_ID_SEQ
import com.example.demo.db.sequences.SAGA_STEP_ERROR_ID_SEQ
import com.example.demo.db.sequences.SAGA_STEP_ID_SEQ
import com.example.demo.db.tables.Saga
import com.example.demo.db.tables.SagaStep
import com.example.demo.db.tables.SagaStepError

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Sequence
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC = Public()
    }

    /**
     * The table <code>public.saga</code>.
     */
    val SAGA get() = Saga.SAGA

    /**
     * The table <code>public.saga_step</code>.
     */
    val SAGA_STEP get() = SagaStep.SAGA_STEP

    /**
     * The table <code>public.saga_step_error</code>.
     */
    val SAGA_STEP_ERROR get() = SagaStepError.SAGA_STEP_ERROR

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getSequences(): List<Sequence<*>> = listOf(
        SAGA_ID_SEQ,
        SAGA_STEP_ERROR_ID_SEQ,
        SAGA_STEP_ID_SEQ
    )

    override fun getTables(): List<Table<*>> = listOf(
        Saga.SAGA,
        SagaStep.SAGA_STEP,
        SagaStepError.SAGA_STEP_ERROR
    )
}
